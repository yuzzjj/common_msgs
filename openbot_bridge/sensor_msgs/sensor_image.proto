// Copyright 2024 The OpenRobotic Beginner Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless openbotby applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package openbot_bridge.sensor_msgs;

import "openbot_bridge/common_msgs/std_msgs.proto";

// Encoding of pixels -- channel meaning, ordering, size
enum PixelFormat 
{
  NONE = 0;
  RGB8 = 1001;
  RGBA8 = 1002;
  RGB16 = 1003;
  RGBA16 = 1004;
  BGR8 = 1005;
  BGRA8 = 1006;
  BGR16 = 1007;
  BGRA16 = 1008;
  MONO8 = 1009;
  MONO16 = 1010;

  // OpenCV CvMat types
  TYPE_8UC1 = 2001;
  TYPE_8UC2 = 2002;
  TYPE_8UC3 = 2003;
  TYPE_8UC4 = 2004;
  TYPE_8SC1 = 2005;
  TYPE_8SC2 = 2006;
  TYPE_8SC3 = 2007;
  TYPE_8SC4 = 2008;
  TYPE_16UC1 = 2009;
  TYPE_16UC2 = 2010;
  TYPE_16UC3 = 2011;
  TYPE_16UC4 = 2012;
  TYPE_16SC1 = 2013;
  TYPE_16SC2 = 2014;
  TYPE_16SC3 = 2015;
  TYPE_16SC4 = 2016;
  TYPE_32SC1 = 2017;
  TYPE_32SC2 = 2018;
  TYPE_32SC3 = 2019;
  TYPE_32SC4 = 2020;
  TYPE_32FC1 = 2021;
  TYPE_32FC2 = 2022;
  TYPE_32FC3 = 2023;
  TYPE_32FC4 = 2024;
  TYPE_64FC1 = 2025;
  TYPE_64FC2 = 2026;
  TYPE_64FC3 = 2027;
  TYPE_64FC4 = 2028;

  // Bayer encodings
  BAYER_RGGB8 = 3001;
  BAYER_BGGR8 = 3002;
  BAYER_GBRG8 = 3003;
  BAYER_GRBG8 = 3004;
  BAYER_RGGB16 = 3005;
  BAYER_BGGR16 = 3006;
  BAYER_GBRG16 = 3007;
  BAYER_GRBG16 = 3008;

  // Miscellaneous
  // This is the UYVY version of YUV422 codec http://www.fourcc.org/yuv.php#UYVY
  // with an 8-bit depth
  YUV422 = 4001;
}

message Image 
{
  openbot_bridge.common_msgs.Header header = 1;
  string frame_id = 2;
  double measurement_time = 3;

  uint32 height = 4;  // image height, that is, number of rows
  uint32 width = 5;   // image width, that is, number of columns

  string encoding = 6;
  uint32 step = 7;  // Full row length in bytes
  bytes data = 8;   // actual matrix data, size is (step * rows)
}

message CompressedImage 
{
  openbot_bridge.common_msgs.Header header = 1;
  string frame_id = 2;

  // Specifies the format of the data
  //  Acceptable values: jpeg, png
  string format = 3;
  bytes data = 4;  // Compressed image buffer
  double measurement_time = 5;
  uint32 frame_type = 6;
  uint32 width = 7;
  uint32 height = 8;
}
